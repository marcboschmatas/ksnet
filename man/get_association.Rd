% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_association.R,
%   R/get_association.data.frame.R, R/get_association.default.R
\name{get_association}
\alias{get_association}
\alias{get_association.data.frame}
\alias{get_association.default}
\title{Tidy association result}
\usage{
get_association(
  x,
  y,
  name_x = NULL,
  name_y = NULL,
  df,
  pairs_to_check,
  return_df
)

\method{get_association}{data.frame}(df, pairs_to_check = NULL, return_df = FALSE)

\method{get_association}{default}(x, y, name_x = NULL, name_y = NULL)
}
\arguments{
\item{x}{A vector.}

\item{y}{A vector.}

\item{name_x}{Optional. Name of the x variable (character).}

\item{name_y}{}

\item{df}{A data.frame with the required data.}

\item{pairs_to_check}{NULL (default), a character vector, a dataframe of two columns or a named list.}

\item{return_df}{}
}
\value{
A dataframe or a named list with the results.
}
\description{
Detect pair type and carry out the appropiate association test. It can be passed two vectors (x and y) or a dataframe.
}
\details{
If the input is a dataframe, when \code{pairs_to_check} is not specified all possible combinations between variables
are taken into account. If it is a character vector of variable names, only these pair combinations will be used.
Besides, it can be a dataframe with two columns specifying the desired pairs. Finally, it can be a
named list in which each name is a variable name, and each element is a character vector with the names
of the variables to combine with the element name. See Examples.
}
\examples{

# DATA FOR THE EXAMPLES #

library(dplyr)
df <- mtcars \%>\%
 filter( carb != 6 & carb != 8 ) \%>\%
 mutate( across(c(cyl,vs,am,gear, carb), as.factor) )

## VECTORS ##
get_association(df$mpg, df$disp)
get_association(df$mpg, df$am)


## DATA.FRAMES ##

## all columns combination
get_association(df[,c(1,2,3,9)], return_df = T)

## only this variables combination
get_association(df, pairs_to_check = c('cyl','disp','gear'),return_df = F )


## only these pairs of combinations
df_pairs <- data.frame( 'x'=c('cyl','disp','gear'),
                        'y'= c('gear','vs','mpg'))

get_association( df, pairs_to_check = df_pairs, return_df = T )

## for each variable the desired combinations:
list_pairs <- list( 'mpg' = c('cyl','disp','vs'),
                    'cyl' = c('disp','vs','am')
 )

get_association( df, pairs_to_check = list_pairs, return_df = T )
}
