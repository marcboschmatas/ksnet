% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iterative_join.R
\name{iterative_join}
\alias{iterative_join}
\title{Iterative Join}
\usage{
iterative_join(obj, fun, by = NULL, ...)
}
\arguments{
\item{obj}{A list where each element is a dataset.}

\item{fun}{The join function (\code{left_join}, \code{inner_join}, etc.).}

\item{by}{A character vector of variables to join by.}

\item{...}{Other parameters passed onto methods.}
}
\value{
A tibble.
}
\description{
The \code{*_join} functions (\code{left_join}, \code{inner_join}, etc.) only allow a
join between 2 datasets, but sometimes we deal with several datasets
that we have to join using the same identifiers.
}
\details{
This function receives as input a list where each element is one of the
datasets, and specifying the type of join and the variable/s of join,
it performs the process iteratively.
}
\examples{

# Fake Data
library(dplyr)
data1 <- data.frame( 'id' = sample(1:5, 10, replace = T ),'x1' = rnorm(10) )
data2 <- data.frame( 'id' = sample(1:5, 10, replace = T ),'x2' = rnorm(10) )
data3 <- data.frame( 'id' = sample(1:5, 10, replace = T ),'x3' = rnorm(10) )
data4 <- data.frame( 'id' = sample(1:5, 10, replace = T ),'x4' = rnorm(10) )

list_data <- list( data1, data2, data3, data4 )

iterative_join(list_data, left_join, 'id')

iterative_join(list_data, inner_join, 'id')

iterative_join(list_data, full_join, 'id')
}
