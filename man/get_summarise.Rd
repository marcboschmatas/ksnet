% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_summarise.R
\name{get_summarise}
\alias{get_summarise}
\alias{get_summarise.default}
\alias{get_summarise.data.frame}
\title{Tidy summarise results}
\usage{
get_summarise(
  x,
  y,
  peso,
  round_stats,
  round_p,
  name_x,
  name_y,
  df,
  pairs_to_check
)

\method{get_summarise}{default}(
  x,
  y,
  peso = NULL,
  round_stats = 3,
  round_p = 3,
  name_x = NULL,
  name_y = NULL
)

\method{get_summarise}{data.frame}(
  df,
  pairs_to_check = NULL,
  peso = NULL,
  round_stats = 3,
  round_p = 3
)
}
\arguments{
\item{x}{A vector.}

\item{y}{A vector.}

\item{peso}{Optional. A vector of weights.}

\item{round_stats}{A numeric of length 1. Number of decimals of stats.}

\item{round_p}{A numeric of length 1. Number of decimals of proportions.}

\item{name_x}{Optional. Name of the x variable (character).}

\item{name_y}{Optional. Name of the y variable (character).}

\item{df}{A data.frame with the required data.}

\item{pairs_to_check}{NULL (default), a character vector, a dataframe of two columns or a named list.}
}
\value{

}
\description{
Detect pair type and carry out the appropiate summarise function. It can be passed two vectors (x and y) or a dataframe.
}
\details{
If the input is a dataframe, when \code{pairs_to_check} is not specified all possible combinations between variables
are taken into account. If it is a character vector of variable names, only these pair combinations will be used.
Besides, it can be a dataframe with two columns specifying the desired pairs. Finally, it can be a
named list in which each name is a variable name, and each element is a character vector with the names
of the variables to combine with the element name. See Examples.
}
\examples{
library(dplyr)
df <- mtcars \%>\%
 filter( carb != 6 & carb != 8 ) \%>\%
 mutate( across(c(cyl,vs,am,gear, carb), as.factor) )

get_summarise(df$mpg, df$cyl)
get_summarise(mtcars$mpg, as.factor(mtcars$cyl))
get_summarise(mtcars$mpg, mtcars$am)
get_summarise(df$cyl, df$vs, runif(32,0.5,1.5) )
}
