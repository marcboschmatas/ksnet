% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_haven_labelled.r
\name{modify_haven_labelled}
\alias{modify_haven_labelled}
\title{Adjust STATA objects to R format}
\usage{
modify_haven_labelled(
  obj,
  new_return_labels = TRUE,
  class = c("numeric", "character", "logical")
)
}
\arguments{
\item{obj}{A dataframe or a vector}

\item{return_labels}{Logical. Return variable values as integers or with its labels. Default TRUE (labels).}

\item{new_class}{When \code{return_lavels} set to FALSE, The desired class of the vector/variables. Choices: 'numeric', 'character' or 'logical'. By default it is converted to numeric.}
}
\value{
The same object with its changed class.
}
\description{
When importing data from Stata, some vectors take 'haven_labelled' as their \code{class} with specific attributes.
Given that this class (with its attributes) does not exist in R this can lead to errors or unexpected behaviours.
}
\details{
This function is provided for changing the class of the object. If it is a dataframe
is not necessary to previously select the columns, since the function detects which
variables need to be modified.

When importing .dta data, coerce functions such as \code{as.numeric} or \code{as.character} work well in principle.
However, if this .dta is transformed to a .rds (for memory reasons) the new vectors are intractables
for these functions. Thus, the function is designed to deal with any type of situation.
}
\examples{
# Import data
ecv2020 <- haven::read.dta('ecv2020.dta')
# The function detects which columns must be changed
ecv2020 <- modify_haven_labelled(ecv2020)

# It can be applied to one variable
ecv2020$situacion_hogar <- modify_haven_labelled( ecv2020$situacion_hogar )

ecv2020 <- ecv2020 \%>\%
   mutate( situacion_hogar = modify_haven_labelled( situacion_hogar )  )
}
